/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cooperstandard.views.extrusao;

import com.cooperstandard.util.EstiloTablaRenderer;
import com.cooperstandard.controller.extrusao.ControllerMontadora;
import com.cooperstandard.controller.extrusao.ControllerProjeto;
import com.cooperstandard.model.ModelMontadora;
import com.cooperstandard.model.ModelProjeto;
import com.cooperstandard.util.ControleInstancias;
import com.cooperstandard.util.HeaderRenderer;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rsouza10
 */
public class ViewProjeto extends javax.swing.JFrame {

    ModelProjeto modelProjeto = new ModelProjeto();
    ControllerProjeto controllerProjeto = new ControllerProjeto();
    ArrayList<ModelProjeto> listaModelProjeto = new ArrayList<ModelProjeto>();
    ControllerMontadora controllerMontadora = new ControllerMontadora();
    ArrayList<ModelMontadora> listaModelMontadora = new ArrayList<ModelMontadora>();

    String tipoCadastro;
    private JFrame solicitante = null;

    public ViewProjeto() {
        initComponents();
        setLocationRelativeTo(null);
        this.carregaProjeto();
        this.listarMontadora();
        tbProjeto.getTableHeader().setDefaultRenderer(new HeaderRenderer(tbProjeto));
        tbProjeto.setDefaultRenderer(String.class, new EstiloTablaRenderer());
        tbProjeto.setDefaultRenderer(Integer.class, new EstiloTablaRenderer());
    }

    public ViewProjeto(JFrame frame) {
        initComponents();
        setLocationRelativeTo(null);
        this.carregaProjeto();
        this.listarMontadora();
        solicitante = frame;
        tbProjeto.getTableHeader().setDefaultRenderer(new HeaderRenderer(tbProjeto));
        tbProjeto.setDefaultRenderer(String.class, new EstiloTablaRenderer());
        tbProjeto.setDefaultRenderer(Integer.class, new EstiloTablaRenderer());
    }

    public void setSolicitante(JFrame solicitante) {
        this.solicitante = solicitante;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbMontadora = new javax.swing.JLabel();
        cbMontadora = new javax.swing.JComboBox<>();
        txtID = new javax.swing.JTextField();
        lbProjeto1 = new javax.swing.JLabel();
        txtProjeto = new javax.swing.JTextField();
        lbProjeto = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProjeto = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Projeto");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(2, 83, 161));

        jPanel2.setBackground(new java.awt.Color(241, 176, 19));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbMontadora.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbMontadora.setText("Montadora:");

        cbMontadora.setEnabled(false);

        txtID.setEnabled(false);

        lbProjeto1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbProjeto1.setText("CÃ³digo:");

        txtProjeto.setEnabled(false);

        lbProjeto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbProjeto.setText("Projeto:");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-adicionar-filled-50.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbProjeto1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbMontadora)
                        .addGap(0, 96, Short.MAX_VALUE))
                    .addComponent(cbMontadora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbProjeto))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMontadora)
                            .addComponent(lbProjeto1)
                            .addComponent(lbProjeto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbMontadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tbProjeto.setAutoCreateRowSorter(true);
        tbProjeto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Montadora", "Projeto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProjeto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProjeto.setFocusable(false);
        jScrollPane1.setViewportView(tbProjeto);
        if (tbProjeto.getColumnModel().getColumnCount() > 0) {
            tbProjeto.getColumnModel().getColumn(0).setMinWidth(0);
            tbProjeto.getColumnModel().getColumn(0).setMaxWidth(0);
            tbProjeto.getColumnModel().getColumn(1).setMinWidth(284);
            tbProjeto.getColumnModel().getColumn(2).setMinWidth(284);
        }

        btnSalvar.setBackground(new java.awt.Color(255, 255, 255));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-salvar-filled-50.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnNovo.setBackground(new java.awt.Color(255, 255, 255));
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-joyent-filled-20 (1).png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setBackground(new java.awt.Color(255, 255, 255));
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-editar-filled-50.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 255, 255));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-nÂ¦o-perturbe-filled-50.png"))); // NOI18N
        btnLimpar.setText("Cancelar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        this.desabilitarCampos();
        limparDados();
        btnSalvar.setEnabled(false);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhasselecionada = tbProjeto.getSelectedRow();

        if (linhasselecionada < 0) {
            JOptionPane.showMessageDialog(this, "VocÃª deve selecionar um item antes de clicar no botÃ£o!", "ATENÃÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            this.excluirProduto();
            limparDados();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int linhasselecionada = tbProjeto.getSelectedRow();

        if (linhasselecionada < 0) {
            JOptionPane.showMessageDialog(this, "VocÃª deve selecionar um item antes de clicar no botÃ£o!", "ATENÃÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            novoProjeto();
            btnSalvar.setEnabled(true);
            habilitarCampos();
            recuperarProjeto();
            tipoCadastro = "alteracao";

        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novoProjeto();
        btnSalvar.setEnabled(true);
        habilitarCampos();
        tipoCadastro = "novo";
        cbMontadora.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        if (tipoCadastro.equals("novo")) {
            if (txtProjeto.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatÃ³rio!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtProjeto.requestFocus();
            } else if (cbMontadora.getSelectedItem().equals("")) {
                cbMontadora.requestFocus();
            } else {
                salvarProjeto();
            }
        } else if (tipoCadastro.equals("alteracao")) {
            alterarProjeto();
            btnSalvar.setEnabled(false);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        ViewMontadora vm = null;
        if (ControleInstancias.isInstaced(ViewMontadora.class)) {
            vm = (ViewMontadora) ControleInstancias.getInstance(ViewMontadora.class.getName(), ViewMontadora.class);
            vm.setSolicitante(this);
        } else {
            vm = new ViewMontadora(this);
        }
        vm.setVisible(true);
    }//GEN-LAST:event_jLabel10MouseClicked

    public void addItemLista(String item) {
        cbMontadora.addItem(item);
        listarMontadora();
    }

    private void listarMontadora() {
        listaModelMontadora = controllerMontadora.getListaMontadoraController();
        cbMontadora.removeAllItems();
        for (int i = 0; i < listaModelMontadora.size(); i++) {
            cbMontadora.addItem(listaModelMontadora.get(i).getOem());
        }
    }

    private void excluirProduto() {
        int linha = tbProjeto.getSelectedRow();
        String nome = (String) tbProjeto.getValueAt(linha, 2);
        int codigo = (Integer) tbProjeto.getValueAt(linha, 0);
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro \nNome: "
                + nome + " ?", "AtenÃ§Ã£o", JOptionPane.YES_OPTION);

        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerProjeto.excluirProjetoController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com sucesso!");
                if (solicitante != null) {
                    if (solicitante instanceof ViewMaterial) {
                        ViewMaterial vp = (ViewMaterial) solicitante;
                        vp.addItemLista(txtProjeto.getText());
                    }
                }
                carregaProjeto();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean salvarProjeto() {
        modelProjeto.setProjeto(this.txtProjeto.getText());
        modelProjeto.setPro_oem(this.cbMontadora.getSelectedItem().toString());
        if (controllerProjeto.salvarProjetoController(modelProjeto) > 0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            this.desabilitarCampos();
            this.carregaProjeto();
            if (solicitante != null) {
                if (solicitante instanceof ViewMaterial) {
                    ViewMaterial vp = (ViewMaterial) solicitante;
                    vp.addItemLista(txtProjeto.getText());
                }
            }
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao tentar gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean recuperarProjeto() {
        int linha = this.tbProjeto.getSelectedRow();
        int codigo = (Integer) tbProjeto.getValueAt(linha, 0);
        try {
            modelProjeto = controllerProjeto.getProjetoController(codigo);
            this.txtID.setText(String.valueOf(modelProjeto.getId_projeto()));
            this.txtProjeto.setText(modelProjeto.getProjeto());
            this.cbMontadora.setSelectedItem(modelProjeto.getPro_oem());

            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "CÃ³digo invÃ¡lido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    private boolean alterarProjeto() {
        modelProjeto.setId_projeto(Integer.parseInt(this.txtID.getText()));
        modelProjeto.setProjeto(this.txtProjeto.getText());
        modelProjeto.setPro_oem(this.cbMontadora.getSelectedItem().toString());
        if (controllerProjeto.atualizarProjetoController(modelProjeto)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            this.desabilitarCampos();
            this.carregaProjeto();
            if (solicitante != null) {
                if (solicitante instanceof ViewMaterial) {
                    ViewMaterial vp = (ViewMaterial) solicitante;
                    vp.addItemLista(txtProjeto.getText());
                }
            }
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void carregaProjeto() {
        listaModelProjeto = controllerProjeto.getListaProjetoController();
        DefaultTableModel modelo = (DefaultTableModel) tbProjeto.getModel();
        modelo.setNumRows(0);
        int cont = listaModelProjeto.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelProjeto.get(i).getId_projeto(),
                listaModelProjeto.get(i).getPro_oem(),
                listaModelProjeto.get(i).getProjeto()
            });
        }
    }

    public void desabilitarCampos() {
        txtProjeto.setEnabled(false);
        cbMontadora.setEnabled(false);
    }

    public void limparDados() {
        txtProjeto.setText("");
        txtID.setText("");
        cbMontadora.setSelectedIndex(-1);
    }

    public void novoProjeto() {
        habilitarCampos();
        txtProjeto.setText("");
        cbMontadora.setSelectedIndex(-1);
        txtID.setText("Novo");
    }

    public void habilitarCampos() {
        txtProjeto.setEnabled(true);
        cbMontadora.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewProjeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewProjeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewProjeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewProjeto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewProjeto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbMontadora;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbMontadora;
    private javax.swing.JLabel lbProjeto;
    private javax.swing.JLabel lbProjeto1;
    private javax.swing.JTable tbProjeto;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtProjeto;
    // End of variables declaration//GEN-END:variables
}
