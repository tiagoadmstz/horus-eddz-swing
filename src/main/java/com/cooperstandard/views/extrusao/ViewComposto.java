/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cooperstandard.views.extrusao;

import com.cooperstandard.views.qualidade.ViewFichaControleQualidade;
import com.cooperstandard.controller.extrusao.ControllerComposto;
import com.cooperstandard.views.principal.AguardeGerandoRelatório;
import com.cooperstandard.model.ModelComposto;
import com.cooperstandard.util.EstiloTablaRenderer;
import com.cooperstandard.util.HeaderRenderer;
import com.cooperstandard.views.acabamento.ViewFichaControleAc;
import com.cooperstandard.views.qualidade.ViewFichaControleQualidadeAc;
import java.sql.Connection;
import com.cooperstandard.dbs.ConexaoSql;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author rsouza10
 */
public class ViewComposto extends javax.swing.JFrame {

    ModelComposto modelComposto = new ModelComposto();
    ControllerComposto controllerComposto = new ControllerComposto();
    ArrayList<ModelComposto> listaModelComposto = new ArrayList<ModelComposto>();
    String tipoCadastro;
    private JFrame solicitante = null;

    public ViewComposto() {
        initComponents();
        this.carregaComposto();
        tbComposto.getTableHeader().setDefaultRenderer(new HeaderRenderer(tbComposto));
        tbComposto.setDefaultRenderer(String.class, new EstiloTablaRenderer());
        tbComposto.setDefaultRenderer(Integer.class, new EstiloTablaRenderer());
    }

    public ViewComposto(JFrame frame) {
        initComponents();
        this.carregaComposto();
        solicitante = frame;
        tbComposto.getTableHeader().setDefaultRenderer(new HeaderRenderer(tbComposto));
        tbComposto.setDefaultRenderer(String.class, new EstiloTablaRenderer());
        tbComposto.setDefaultRenderer(Integer.class, new EstiloTablaRenderer());
    }

    public void setSolicitante(JFrame solicitante) {
        this.solicitante = solicitante;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbComposto = new javax.swing.JLabel();
        txtComposto = new javax.swing.JTextField();
        txtBpcs = new javax.swing.JTextField();
        lbBpsc = new javax.swing.JLabel();
        lbDescComposto = new javax.swing.JLabel();
        txtDescComposto = new javax.swing.JTextField();
        lbImagem = new javax.swing.JLabel();
        txtBusca = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        lbBuscar = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lbComposto1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbComposto = new javax.swing.JTable();
        btnLimpar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Composto");

        jPanel1.setBackground(new java.awt.Color(2, 83, 161));

        jPanel2.setBackground(new java.awt.Color(241, 176, 19));

        lbComposto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbComposto.setText("Composto:");

        txtComposto.setEnabled(false);

        txtBpcs.setEnabled(false);

        lbBpsc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbBpsc.setText("BPCS:");

        lbDescComposto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbDescComposto.setText("Desc. Composto:");

        txtDescComposto.setEnabled(false);

        lbImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-binóculos-filled-50.png"))); // NOI18N

        txtBusca.setBackground(new java.awt.Color(255, 255, 204));
        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscaKeyReleased(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-pdf-2-filled-50.png"))); // NOI18N
        jButton3.setText("Visualizar/Imprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lbBuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbBuscar.setText("Buscar:");

        txtId.setEnabled(false);

        lbComposto1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbComposto1.setText("Código:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbComposto1)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtComposto, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbComposto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBpcs, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBpsc))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescComposto)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbDescComposto)
                                .addGap(0, 308, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBusca)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbBuscar)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbComposto)
                    .addComponent(lbDescComposto)
                    .addComponent(lbBpsc)
                    .addComponent(lbComposto1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComposto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBpcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescComposto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3)
                    .addComponent(lbImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbComposto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Composto", "Bpcs", "Desc.Composto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbComposto.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbComposto);
        if (tbComposto.getColumnModel().getColumnCount() > 0) {
            tbComposto.getColumnModel().getColumn(0).setMinWidth(0);
            tbComposto.getColumnModel().getColumn(0).setMaxWidth(0);
            tbComposto.getColumnModel().getColumn(1).setMinWidth(180);
            tbComposto.getColumnModel().getColumn(1).setMaxWidth(180);
            tbComposto.getColumnModel().getColumn(2).setMinWidth(130);
            tbComposto.getColumnModel().getColumn(2).setMaxWidth(130);
        }

        btnLimpar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-n¦o-perturbe-filled-50.png"))); // NOI18N
        btnLimpar.setText("Cancelar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 255, 255));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-excluir-filled-50.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setBackground(new java.awt.Color(255, 255, 255));
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-editar-filled-50.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnNovo.setBackground(new java.awt.Color(255, 255, 255));
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-joyent-filled-20 (1).png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(255, 255, 255));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons 20/icons8-salvar-filled-50.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnNovo)
                    .addComponent(btnLimpar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyReleased
        DefaultTableModel tabela = (DefaultTableModel) this.tbComposto.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabela);
        this.tbComposto.setRowSorter(sorter);
        String text = txtBusca.getText();
        sorter.setRowFilter(RowFilter.regexFilter(text, 1, 2));
    }//GEN-LAST:event_txtBuscaKeyReleased

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        this.desabilitarCampos();
        limparDados();
        btnSalvar.setEnabled(false);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhasselecionada = tbComposto.getSelectedRow();

        if (linhasselecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            this.excluirComposto();
            limparDados();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int linhasselecionada = tbComposto.getSelectedRow();

        if (linhasselecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            novoProjeto();
            btnSalvar.setEnabled(true);
            habilitarCampos();
            recuperarComposto();
            tipoCadastro = "alteracao";

        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novoProjeto();
        btnSalvar.setEnabled(true);
        habilitarCampos();
        tipoCadastro = "novo";
        txtComposto.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (tipoCadastro.equals("novo")) {
            if (txtComposto.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtComposto.requestFocus();
            } else if (txtBpcs.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtBpcs.requestFocus();
            } else if (txtDescComposto.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtDescComposto.requestFocus();
            } else {
                salvarComposto();
            }
        } else if (tipoCadastro.equals("alteracao")) {
            if (txtComposto.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtComposto.requestFocus();
            } else if (txtBpcs.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtBpcs.requestFocus();
            } else if (txtDescComposto.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!", "ERRO", JOptionPane.WARNING_MESSAGE);
                txtDescComposto.requestFocus();
            } else {
                alterarComposto();
                btnSalvar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 final AguardeGerandoRelatório carregando = new AguardeGerandoRelatório();
            carregando.setVisible(true);
            Thread t = new Thread() {
                public void run() {
                    try {
                        String logo = "/images/logocooper.jpg";
                        
                        Connection con = new ConexaoSql().getCon();
                        Map p = new HashMap();
                        p.put("logo", this.getClass().getResourceAsStream(logo));
                        JasperReport jr = (JasperReport) JRLoader.loadObject(getClass().getResource("/Relatorios/listagemcomposto.jasper"));

                        JasperPrint print = JasperFillManager.fillReport(jr, p, con);
                        JasperViewer view = new JasperViewer(print, false);
                        view.setTitle("Composto");

                        view.setVisible(true);
                    } catch (Exception erro) {

                        JOptionPane.showMessageDialog(null, "deu erro =" + erro);
                        System.out.println(erro);

                    }
                    carregando.dispose();
                }
            };
            t.start();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void excluirComposto() {
        int linha = tbComposto.getSelectedRow();
        int nome = (Integer) tbComposto.getValueAt(linha, 1);
        int codigo = (Integer) tbComposto.getValueAt(linha, 0);
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro \nNome: "
                + nome + " ?", "Atenção", JOptionPane.YES_OPTION);

        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerComposto.excluirCompostoController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com sucesso!");
                carregaComposto();
                if (solicitante != null) {
                    if (solicitante instanceof ViewFichaControle) {
                        ViewFichaControle vp = (ViewFichaControle) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidade) {
                        ViewFichaControleQualidade vp = (ViewFichaControleQualidade) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidadeAc) {
                        ViewFichaControleQualidadeAc vp = (ViewFichaControleQualidadeAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleAc) {
                        ViewFichaControleAc vp = (ViewFichaControleAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean salvarComposto() {
        modelComposto.setComposto(Integer.parseInt(this.txtComposto.getText()));
        modelComposto.setBpcs(this.txtBpcs.getText());
        modelComposto.setDesc_composto(this.txtDescComposto.getText());
        if (controllerComposto.salvarCompostoController(modelComposto) > 0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            this.desabilitarCampos();
            this.carregaComposto();
                if (solicitante != null) {
                    if (solicitante instanceof ViewFichaControle) {
                        ViewFichaControle vp = (ViewFichaControle) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidade) {
                        ViewFichaControleQualidade vp = (ViewFichaControleQualidade) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidadeAc) {
                        ViewFichaControleQualidadeAc vp = (ViewFichaControleQualidadeAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleAc) {
                        ViewFichaControleAc vp = (ViewFichaControleAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    }
                }
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao tentar gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean recuperarComposto() {
        int linha = this.tbComposto.getSelectedRow();
        int codigo = (Integer) tbComposto.getValueAt(linha, 0);
        try {
            modelComposto = controllerComposto.getCompostoController(codigo);
            this.txtId.setText(String.valueOf(modelComposto.getId()));
            this.txtComposto.setText(String.valueOf(modelComposto.getComposto()));
            this.txtBpcs.setText(modelComposto.getBpcs());
            this.txtDescComposto.setText(modelComposto.getDesc_composto());

            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    private boolean alterarComposto() {
        modelComposto.setId(Integer.parseInt(this.txtId.getText()));
        modelComposto.setComposto(Integer.parseInt(this.txtComposto.getText()));
        modelComposto.setBpcs(this.txtBpcs.getText());
        modelComposto.setDesc_composto(this.txtDescComposto.getText());
        if (controllerComposto.atualizarCompostoController(modelComposto)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            this.desabilitarCampos();
            this.carregaComposto();
                if (solicitante != null) {
                    if (solicitante instanceof ViewFichaControle) {
                        ViewFichaControle vp = (ViewFichaControle) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidade) {
                        ViewFichaControleQualidade vp = (ViewFichaControleQualidade) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleQualidadeAc) {
                        ViewFichaControleQualidadeAc vp = (ViewFichaControleQualidadeAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    } else if (solicitante instanceof ViewFichaControleAc) {
                        ViewFichaControleAc vp = (ViewFichaControleAc) solicitante;
                        vp.addItemLista(txtComposto.getText());
                    }
                }
            limparDados();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void carregaComposto() {
        listaModelComposto = controllerComposto.getListaCompostoController();
        DefaultTableModel modelo = (DefaultTableModel) tbComposto.getModel();
        modelo.setNumRows(0);
        int cont = listaModelComposto.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelComposto.get(i).getId(),
                listaModelComposto.get(i).getComposto(),
                listaModelComposto.get(i).getBpcs(),
                listaModelComposto.get(i).getDesc_composto()

            });

        }

    }

    public void desabilitarCampos() {
        txtComposto.setEnabled(false);
        txtBpcs.setEnabled(false);
        txtDescComposto.setEnabled(false);
    }

    public void limparDados() {
        txtComposto.setText("");
        txtId.setText("");
        txtBpcs.setText("");
        txtBusca.setText("");
        txtDescComposto.setText("");
    }

    public void novoProjeto() {
        habilitarCampos();
        txtComposto.setText("");
        txtBpcs.setText("");
        txtDescComposto.setText("");
        txtBusca.setText("");
        txtId.setText("Novo");
    }

    public void habilitarCampos() {
        txtComposto.setEnabled(true);
        txtBpcs.setEnabled(true);
        txtDescComposto.setEnabled(true);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewComposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewComposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewComposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewComposto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewComposto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBpsc;
    private javax.swing.JLabel lbBuscar;
    private javax.swing.JLabel lbComposto;
    private javax.swing.JLabel lbComposto1;
    private javax.swing.JLabel lbDescComposto;
    private javax.swing.JLabel lbImagem;
    private javax.swing.JTable tbComposto;
    private javax.swing.JTextField txtBpcs;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JTextField txtComposto;
    private javax.swing.JTextField txtDescComposto;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
